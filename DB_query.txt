

1.	Выбрать все строки из таблицы c перевозчиками. 
        
         SELECT * FROM Shippers;

+-----------+------------------+----------------+
| ShipperID | ShipperName      | Phone          |
+-----------+------------------+----------------+
|         1 | Speedy Express   | (503) 555-9831 |
|         2 | United Package   | (503) 555-3199 |
|         3 | Federal Shipping | (503) 555-9931 |
+-----------+------------------+----------------+

                   
2.	Выбрать первые 3 строки из таблицы c сотрудниками.

        SELECT*FROM Employees limit 3;

+----------------------------------------------------------------------------------------------
|          1 | Davolio   | Nancy     | 1968-12-08 | EmpID1.pic | Education includes a BA in na.
|          2 | Fuller    | Andrew    | 1952-02-19 | EmpID2.pic | Andrew received his BTS vice. 
|          3 | Leverling | Janet     | 1963-08-30 | EmpID3.pic | Janet has a BS degree in ative
+----------------------------------------------------------------------------------------------

3.	Из таблицы сотрудников выбрать все имена, фамилии, дни рождения в следующем порядке: BirthDate, FirstName, LastName, количество строк в выборке ограничить 3-мя.
        
        SELECT BirthDate, FirstName, LastName FROM Employees limit 3;

+------------+-----------+-----------+
| BirthDate  | FirstName | LastName  |
+------------+-----------+-----------+
| 1968-12-08 | Nancy     | Davolio   |
| 1952-02-19 | Andrew    | Fuller    |
| 1963-08-30 | Janet     | Leverling |
+------------+-----------+-----------+

4.	Выбрать имена и фамлии сотрудников, родившихся в 1958 году.   

        SELECT BirthDate, FirstName FROM Employees Where BirthDate LIKE '1958%';

+-----------+----------+
| FirstName | LastName |
+-----------+----------+
| Margaret  | Peacock  |
| Laura     | Callahan |
+-----------+----------+

5.	Выбрать все товары с ценой от 23 до 25.

    SELECT * FROM Products WHERE Price BETWEEN 23 AND 25;

+-----------+------------------------------+------------+------------+-------------------+-------+
| ProductID | ProductName                  | SupplierID | CategoryID | Unit              | Price |
+-----------+------------------------------+------------+------------+-------------------+-------+
|         6 | Grandma's Boysenberry Spread |          3 |          2 | 12 - 8 oz jars    | 25.00 |
|        14 | Tofu                         |          6 |          7 | 40 - 100 g pkgs.  | 23.25 |
|        55 | Pbtu chinois                 |         25 |          6 | 24 boxes x 2 pies | 24.00 |
+-----------+------------------------------+------------+------------+-------------------+-------+

6.	Найти товары с минимальной ценой. 
      
      1. SELECT * FROM Products WHERE Price = (SELECT MIN(Price) FROM Products); 
      2. SELECT * FROM Products ORDER BY Price ASC limit 1;    

+-----------+-------------+------------+------------+-------+-------+
| ProductID | ProductName | SupplierID | CategoryID | Unit  | Price |
+-----------+-------------+------------+------------+-------+-------+
|        33 | Geitost     |         15 |          4 | 500 g |  2.50 |
+-----------+-------------+------------+------------+-------+-------+

7.	Найти товары с максимальной ценой. 

     SELECT Products WHERE Price = (SELECT MAX(Price) FROM Products);

+-----------+---------------+------------+------------+--------------------+--------+
| ProductID | ProductName   | SupplierID | CategoryID | Unit               | Price  |
+-----------+---------------+------------+------------+--------------------+--------+
|        38 | Cute de Blaye |         18 |          1 | 12 - 75 cl bottles | 263.50 |
+-----------+---------------+------------+------------+--------------------+--------+

8.	Выбрать все товары, у которых Unit '10 pkgs.'.

      SELECT * FROM Products WHERE UNit = '10 pkgs.';

+-----------+-------------+------------+------------+----------+-------+
| ProductID | ProductName | SupplierID | CategoryID | Unit     | Price |
+-----------+-------------+------------+------------+----------+-------+
|        48 | Chocolade   |         22 |          3 | 10 pkgs. | 12.75 |
+-----------+-------------+------------+------------+----------+-------+P

9.	Выбрать адреса поставщиков, которые проживают в одном из городов: Tokyo, Frankfurt, Osaka.  

         SELECT Address FROM Suppliers WHERE City = 'Tokyo' OR City = 'Frankfurt' OR City = 'Osaka';

+---------------------------+
| Address                   |
+---------------------------+
| 9-8 Sekimai Musashino-shi |
| 92 Setsuko Chuo-ku        |
| Bogenallee 51             |
+---------------------------+

10.	Выбрать название товаров начинающихся с буквы “G”, у которых цена больше 37.
           
           SELECT ProductName FROM Products WHERE ProductName Like 'G%' and Price > '37';

+------------------------+
| ProductName            |
+------------------------+
| Gnocchi di nonna Alice |
+------------------------+

11.	 Вывести список стран начинающихся на S и состоящих из 5 букв, из которых есть поставщики. 


                SELECT Country FROM Suppliers WHERE Country Like 'S____';

+---------+
| Country |
+---------+
| Spain   |
+---------+

12.	 Вывести сумму всех товаров, в названии которых содержится ”od”, столбец назвать Summ.


            SELECT SUM(Price) FROM Products WHERE ProductName Like '%od%';


+--------+
| Summ   |
+--------+
| 131.00 |
+--------+

13.	 Вывести среднюю сумму товаров, поставляемых в бутылках, округлив до 2-х знаков после запятой, столбец назвать Summ. 
        
        SELECT ROUND(AVG(Price), 2) AS Summ FROM Products WHERE Unit LIKE '%bottles%'

+-------+
| Summ  |
+-------+
| 38.75 |
+-------+

14.	 Найти количество клиентов, которые НЕ проживают в Франции и Германии,  столбец назвать Countt.


            1. SELECT COUNT(*) AS Coutt FROM Customers WHERE NOT Country='Germany' AND NOT Country='France';
            2. SELECT COUNT(*) AS Coutt FROM Customers WHERE Country<>'Germany' AND Country<>'France';


+--------+
| Countt |
+--------+
|     69 |
+--------+

15.	 Вывести имена сотрудников, родившихся после 01.01.1968 года. Отсортировать результат по имени.     


            SELECT FirstName FROM Employees WHERE BirthDate > '1968-01-01';

+-----------+
| FirstName |
+-----------+
| Anne      |
| Nancy     |
+-----------+

16.	 Выбрать названия товаров, у которых Price = 13 или 15 и отсортировать по возрастанию, использовать Select команды с объединением результатов через UNION.  

      
        SELECT ProductName FROM Products Where Price='15' UNION SELECT ProductName FROM Products WHERE Price='13' ORDER BY ProductName ASC;


+---------------------------------+
| ProductName                     |
+---------------------------------+
| Original Frankfurter grine Soae |
| Outback Lager                   |
| Rud Kaviar                      |
+---------------------------------+

17.	 Показать имена товаров, в названии которых третяя буква m и названия их поставщиков.


        SELECT Products.ProductName, Suppliers.SupplierName FROM Products  JOIN Suppliers ON Products.SupplierID=Suppliers.SupplierID WHERE ProductName LIKE '__m%';

+---------------------------+-----------------------------------+
| ProductName               | SupplierName                      |
+---------------------------+-----------------------------------+
| Gumbur Gummiburchen       | Heli Swaren GmbH & Co. KG         |
| Camembert Pierrot         | Gai puturage                      |
| Wimmers gute Semmelknudel | Plutzer Lebensmittelgroumurkte AG |
+---------------------------+-----------------------------------+

18.	Показать имена и фамилии сотрудника, который оформил заказ 1996-11-27 (написать запрос двумя способами: через INNER Join, и используя подзапрос).


                1. SELECT Employees.FirstName, Employees.LastName FROM Employees JOIN Orders ON Employees.EmployeeID=Orders.EmployeeID WHERE OrderDate = '1996-11-27';
                2. SELECT LastName, FirstName FROM Employees WHERE EmployeeID IN (SELECT EmployeeID FROM Orders WHERE OrderDate LIKE '1996-11-27' );

+-----------+-----------+
| FirstName | LastName  |
+-----------+-----------+
| Janet     | Leverling |
+-----------+-----------+


19.	Выбрать все товары, у которых поставщик «Grandma Kelly's Homestead» и цена > 27. В результате вывести 3 колонки: Product, Supplier, Price.

        
        SELECT Products.ProductName, Suppliers.SupplierName, Products.Price 
            FROM Products 
            JOIN Suppliers 
            ON Products.SupplierID = Suppliers.SupplierID 
            WHERE Price > '27' AND SupplierName LIKE 'Grandma Kell%';

+---------------------------------+---------------------------+-------+
| ProductName                     | SupplierName              | Price |
+---------------------------------+---------------------------+-------+
| Uncle Bob's Organic Dried Pears | Grandma Kelly's Homestead | 30.00 |
| Northwoods Cranberry Sauce      | Grandma Kelly's Homestead | 40.00 |
+---------------------------------+---------------------------+-------+

20.	 Вывести сумму всех заказов (столбец обозвать Summ), у которых имя продукта - 'Queso Cabrales' (написать запрос двумя способами: через INNER Join, и используя подзапрос).

 1.  SELECT SUM(Quantity) AS Summ 
                        FROM (
                                SELECT Products.ProductID, Products.ProductName, OrderDetails.Quantity
                                FROM Products JOIN OrderDetails ON Products.ProductID = OrderDetails.ProductID
                                WHERE ProductName LIKE 'Queso Cabrales'
                        ) AS T ;
                
 2.  SELECT SUM(Quantity) AS Summ 
          FROM (
                SELECT A.ProductID, A.ProductName, B.Quantity 
                FROM Products AS A, OrderDetails AS B
               WHERE A.ProductName = 'Queso Cabrales' AND A.ProductID = B.ProductID
               ) AS T;

+------+
| Summ |
+------+
|  182 |
+------+


21.	Показать все заказы, которые были отправлены по адресу «Ekergatan 24» с их заказчиками и сотрудниками. В результате вывести 3 колонки – ID заказа, имя заказчика, имя сотрудника, фамилия сотрудника.

        SELECT B.OrderID, A.CustomerName, C.FirstName, C.LastName  
                FROM Customers AS A, Orders AS B, Employees AS C 
                WHERE A.CustomerID = B.CustomerID 
                AND C.EmployeeID = B.EmployeeID
                AND Address = 'Ekergatan 24';


+---------+----------------+-----------+-----------+
| OrderID | CustomerName   | FirstName | LastName  |
+---------+----------------+-----------+-----------+
|   10264 | Folk och fe HB | Michael   | Suyama    |
|   10327 | Folk och fe HB | Andrew    | Fuller    |
|   10378 | Folk och fe HB | Steven    | Buchanan  |
|   10434 | Folk och fe HB | Janet     | Leverling |
+---------+----------------+-----------+-----------+

22.	Преобразовать предыдущий запрос таким образом, чтобы те же данные выводились в 3-х колонках – объединить LastName и FirstName из Employees в одну колонку через пробел и назвать ее EmployeeName (2 LEFT JOINS). 

                SELECT OrderID, CustomerName, 
                        CONCAT(FirstName,' ', LastName) AS EmployeeName
                        FROM (
                                SELECT B.OrderID, A.CustomerName, C.FirstName, C.LastName  
                                FROM Customers AS A, Orders AS B, Employees AS C 
                                WHERE A.CustomerID = B.CustomerID 
                                AND C.EmployeeID = B.EmployeeID AND Address = 'Ekergatan 24'
                        ) AS T;


+---------+----------------+-----------------+
| OrderID | CustomerName   | EmployeeName    |
+---------+----------------+-----------------+
|   10264 | Folk och fe HB | Michael Suyama  |
|   10327 | Folk och fe HB | Andrew Fuller   |
|   10378 | Folk och fe HB | Steven Buchanan |
|   10434 | Folk och fe HB | Janet Leverling |
+---------+----------------+-----------------+

23.	Показать все продукты, содержащиеся в заказах 1997-го года и в названии которых менее 5 букв. В результате вывести OrderID, OrderDate, ProductName (написать запрос двумя способами: через INNER JOINS, и используя подзапросы).

                1. SELECT B.OrderID, B.OrderDate, A.ProductName 
                        FROM Products AS A, Orders AS B, OrderDetails AS C 
                        WHERE A.ProductID = C.ProductID 
                        AND B.OrderID = C.OrderID 
                        AND OrderDate LIKE '1997%' 
                        AND CHAR_LENGTh(ProductName)<5;

                2. SELECT Orders.OrderID, Orders.OrderDate, Products.ProductName
                        FROM 
                            (
                               (
                                 OrderDetails JOIN Products
                                 ON OrderDetails.ProductID = Products.ProductID
                               )
                              JOIN Orders 
                              ON OrderDetails.OrderID = Orders.OrderID
                            ) 
                        WHERE OrderDate LIKE '1997%' 
                        AND CHAR_LENGTH(ProductName)< 5;

                

+---------+------------+-------------+
| OrderID | OrderDate  | ProductName |
+---------+------------+-------------+
|   10409 | 1997-01-09 | Tofu        |
|   10412 | 1997-01-13 | Tofu        |
|   10427 | 1997-01-27 | Tofu        |
+---------+------------+-------------+

24.	Показать названия продуктов и их категорий, которые используются в заказах от заказчика по имени Blondel père et fils и категории которых состоят как минимум из 2-х слов.
                       
                        SELECT C.CategoryName, F.CustomerName
                        FROM 
                                OrderDetails AS A, Products AS B, 
                                Categories AS C, Orders AS D, Customers AS F 
                                WHERE C.CategoryID = B.CategoryID 
                                AND B.ProductID = A.ProductID AND D.OrderID = A.OrderID 
                                AND F.CustomerID = D.CustomerID 
                                AND CustomerName LIKE 'Blondel%' AND CategoryName LIKE '% %';

                                
+----------------+------------------------+
| CategoryName   | ProductName            |
+----------------+------------------------+
| Dairy Products | Mozzarella di Giovanni |
+----------------+------------------------+

25.	 Вывести количество заказчиков (колонку назвать Buyers), которые сделали заказали один из  продуктов: «Queso Cabrales», «Gustaf's Knäckebröd», «Louisiana Fiery Hot Pepper Sauce», «Schoggi Schokolade», «Gnocchi di nonna Alice».

                 SELECT 
                        COUNT(DISTINCT CustomerName) AS Buyers 
                           FROM 
                                (
                                   SELECT 
                                        A.OrderID, B.ProductName, C.CategoryName, D.CustomerID, F.CustomerName
                                   FROM 
                                        OrderDetails AS A, Products AS B, Categories AS C, Orders AS D, Customers AS F
                                   WHERE
                                        C.CategoryID = B.CategoryID AND B.ProductID = A.ProductID 
                                        AND D.OrderID = A.OrderID AND F.CustomerID = D.CustomerID
                                ) 
                           AS T 
                        WHERE 
                             ProductName IN ('Queso Cabrales', 'Louisiana Fiery Hot Pepper Sauce', 'Schoggi Schokolade', 'Gnocchi di nonna Alice') 
                             OR ProductName LIKE 'Gustaf_s Knäckebröd';   

+--------+
| Buyers |
+--------+
|     25 |
+--------+


26.	 *Найти города в которые было отправлено больше всего заказов, вывести назание города и количество заказов (колонку назвать Amount).

SELECT City, 
         COUNT(OrderID) AS Amount 
  FROM 
        (
           SELECT A.OrderID,
                  B.CustomerID,
                  B.CustomerName, 
                  B.City 
           FROM  Orders AS A,
                 Customers AS B 
                 WHERE A.CustomerID=B.CustomerID
        ) AS T 
        GROUP BY City 
   HAVING Amount = (
                     SELECT MAX(Amount) 
                     FROM 
                       (
                         SELECT COUNT(OrderID) AS Amount
                         FROM 
                              (
                               SELECT A.OrderID,
                                      B.CustomerID,
                                      B.CustomerName,
                                      B.City 
                               FROM  Orders AS A,
                                     Customers AS B 
                                     WHERE A.CustomerID=B.CustomerID
                               ) 
                         AS T
                         GROUP BY City
                        )
                      AS MAX
                     );


+--------+--------+
| City   | Amount |
+--------+--------+
| Graz   |     10 |
| London |     10 |
+--------+--------+	